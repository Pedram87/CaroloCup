/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.4-dev at Thu Sep 24 11:44:39 2015. */

#ifndef PB_SIMPLE_PB_H_INCLUDED
#define PB_SIMPLE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _sensorData {
    int32_t usf;
    bool has_usb;
    int32_t usb;
    bool has_irrf;
    int32_t irrf;
    bool has_irrb;
    int32_t irrb;
    bool has_irrl;
    int32_t irrl;
    bool has_irrr;
    int32_t irrr;
} sensorData;

/* Default values for struct fields */

/* Initializer values for message structs */
#define sensorData_init_default                  {0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define sensorData_init_zero                     {0, false, 0, false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define sensorData_usf_tag                       1
#define sensorData_usb_tag                       2
#define sensorData_irrf_tag                      3
#define sensorData_irrb_tag                      4
#define sensorData_irrl_tag                      5
#define sensorData_irrr_tag                      6

/* Struct field encoding specification for nanopb */
extern const pb_field_t sensorData_fields[7];

/* Maximum encoded size of messages (where known) */
#define sensorData_size                          66

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SIMPLE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
